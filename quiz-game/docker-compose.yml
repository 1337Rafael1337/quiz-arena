version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: quiz-arena-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: quiz_arena
      POSTGRES_USER: quiz_user
      POSTGRES_PASSWORD: quiz_password_123
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      # Automatische SQL-Ausf√ºhrung nur beim ERSTEN Start (wenn DB leer ist)
      - ./backend/src/database/01-schema.sql:/docker-entrypoint-initdb.d/01-schema.sql:ro
      - ./backend/src/database/02-indexes.sql:/docker-entrypoint-initdb.d/02-indexes.sql:ro
      - ./backend/src/database/03-add-ownership-and-permissions.sql:/docker-entrypoint-initdb.d/03-permissions.sql:ro
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U quiz_user -d quiz_arena"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis (for sessions/caching)
  redis:
    image: redis:7-alpine
    container_name: quiz-arena-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: quiz-arena-backend
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 3001
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: quiz_arena
      DB_USER: quiz_user
      DB_PASSWORD: quiz_password_123
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: super_secret_quiz_key_development_only_change_in_production
      CLIENT_URL: http://localhost:5173
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/node_modules
      - ./backend/uploads:/app/uploads
    command: bun run dev

  # Frontend (Development)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: quiz-arena-frontend
    restart: unless-stopped
    environment:
      VITE_API_URL: http://localhost:3001
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: bun run dev --host 0.0.0.0

  # pgAdmin (Optional - for database management)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: quiz-arena-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@quiz-arena.local
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8080:80"
    depends_on:
      - postgres
    volumes:
      - pgadmin_data:/var/lib/pgadmin

volumes:
  postgres_data:
  redis_data:
  pgadmin_data:
