services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: quiz-arena-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: quiz_arena
      POSTGRES_USER: quiz_user
      POSTGRES_PASSWORD: quiz_password_123
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/src/database/init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - quiz-arena-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U quiz_user -d quiz_arena"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for session management and real-time features
  redis:
    image: redis:7-alpine
    container_name: quiz-arena-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - quiz-arena-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./quiz-game/backend
      dockerfile: Dockerfile
    container_name: quiz-arena-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: quiz_arena
      DB_USER: quiz_user
      DB_PASSWORD: quiz_password_123
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      PORT: 3001
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - quiz-arena-network
    volumes:
      - ./backend/logs:/app/logs

  # Frontend
  frontend:
    build:
      context: ./quiz-game/frontend
      dockerfile: Dockerfile
    container_name: quiz-arena-frontend
    restart: unless-stopped
    environment:
      VITE_API_URL: http://localhost:3001
      VITE_SOCKET_URL: http://localhost:3001
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - quiz-arena-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  quiz-arena-network:
    driver: bridge